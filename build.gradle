apply plugin: 'com.android.library'
// 添加APT plugin
// apply plugin: 'com.neenbedankt.android-apt'
// def COMPILESDK_VERSION = Integer.parseInt(file('../COMPILESDK_VERSION.txt').text)
// def BUILDTOOLS_VERSION = file('../BUILDTOOLS_VERSION.txt').text
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.13'
        classpath 'org.aspectj:aspectjweaver:1.8.13'
    }
}

android {
    compileSdkVersion "${COMPILE_SDK_VERSION}" as int
    buildToolsVersion "${BUILD_TOOLS_VERSION}"
    defaultConfig {
        minSdkVersion "${MIN_SDK_VERSION}" as int
        targetSdkVersion "${TARGET_SDK_VERSION}" as int
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            // aidl.srcDirs = ['src/main/aidl']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

//repositories{
//    flatDir{
//        dirs 'libs'
//        dirs project(':Android-Cloud-TagView-Plus-Library-release').file('libs')
//    }
//}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // include group:'com.android.support',module:'animated-vector-drawable'
    // include group:'com.android.support',module:'support-annotations'
    // include group:'com.android.support',module:'support-compat'
    // include group:'com.android.support',module:'support-core-ui'
    // include group:'com.android.support',module:'support-core-utils'
    // include group:'com.android.support',module:'support-fragment'
    // include group:'com.android.support',module:'support-media-compat'
    compile "com.android.support:support-v4:$SUPPORT_V4"

    // include group: 'com.android.support', module: 'support-vector-drawable'
    compile("com.android.support:appcompat-v7:$SUPPORT_APPCOMPAT_V7_VERSION") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
        // exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
    }
    compile("com.android.support:recyclerview-v7:$SUPPORT_RECYCLERVIEW_V7") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-core-ui'
    }
    compile("com.android.support:support-v13:$SUPPORT_V4") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-core-ui'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'support-fragment'
        exclude group: 'com.android.support', module: 'support-media-compat'

        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    compile("com.android.support:transition:$SUPPORT_V4") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-core-ui'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'support-fragment'
        exclude group: 'com.android.support', module: 'support-media-compat'

        exclude group: 'com.android.support', module: 'animated-vector-drawable'
    }

    // http://stackoverflow.com/questions/39286118/getting-java-util-zip-zipexception-duplicate-entry-exception
    // design 为单独包
    compile("com.android.support:design:$SUPPORT_V4") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-core-ui'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'support-fragment'
        exclude group: 'com.android.support', module: 'support-media-compat'

        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'transition'

        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'

    }

    compile('com.android.support.constraint:constraint-layout:1.0.2') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile("com.android.support:multidex:$SUPPORT_MULTIDEX") {
        exclude group: 'com.android.support', module: 'support-v4'
    }

    compile "com.squareup.okhttp3:okhttp:$OK_HTTP"
    compile "id.zelory:compressor:$COMPRESSOR"
    compile "com.google.code.gson:gson:$GSON"
    compile("com.github.bumptech.glide:glide:$GLIDE") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE"
    compile "com.nostra13.universalimageloader:universal-image-loader:$UNIVERSAL_IMAGE_LOADER"
    compile "org.xutils:xutils:$XUTILS_VERSION"
    // https://github.com/smuyyh/ImageSelector
    compile('com.yuyh.imgsel:library:1.3.8') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    compile('ch.acra:acra:4.9.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile "org.greenrobot:eventbus:$EVENTBUS"

    testCompile "junit:junit:$JUNIT_VERSION"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$LEAKCANARY"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY"
    // 讯飞语音
    compile files('libs/Msc.jar')
    // https://github.com/Bigkoo/Android-PickerView
    compile "com.contrarywind:Android-PickerView:$ANDROID_PICKERVIEW"
    // 自定义注解相关
    provided project(':apt-lib')
    annotationProcessor project(':apt-compiler')

    api("com.github.2017398956:AbcPermission:$ABC_PERMISSION") {
        exclude module: 'permissionAnnotation'
        exclude module: 'permissionCompiler'
    }
    provided("com.github.2017398956:AbcPermission:$ABC_PERMISSION") {
        exclude module: 'permissionSupport'
        exclude module: 'permissionCompiler'
    }
    annotationProcessor("com.github.2017398956:AbcPermission:$ABC_PERMISSION") {
        exclude module: 'permissionSupport'
    }
}

android.libraryVariants.all { variant ->
    Task javaCompile = variant.getJavaCompiler()
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", android.bootClasspath.join(File.pathSeparator)]
        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)

        def log = project.logger
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}

